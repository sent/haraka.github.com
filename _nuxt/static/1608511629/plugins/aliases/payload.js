__NUXT_JSONP__("/plugins/aliases", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A){return {data:[{document:{slug:n,title:n,position:36,category:"Plugins",toc:[{id:o,depth:p,text:q},{id:r,depth:p,text:s}],body:{type:"root",children:[{type:b,tag:d,props:{},children:[{type:a,value:"This plugin allows one to configure aliases that may perform an action or\nchange the RCPT address in a number of ways.  All aliases are specified in\na JSON formatted configuration file, and must have at very least an action.\nAny syntax error found in the JSON format config file will stop the server\nfrom running."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"IMPORTANT: this plugin must appear in "},{type:b,tag:e,props:{},children:[{type:a,value:"config\u002Fplugins"}]},{type:a,value:" before other plugins\nthat run on hook_rcpt"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"WARNING: DO NOT USE THIS PLUGIN WITH queue\u002Fsmtp_proxy."}]},{type:a,value:c},{type:b,tag:t,props:{id:o},children:[{type:b,tag:l,props:{href:"#configuration",ariaHidden:u,tabIndex:v},children:[{type:b,tag:w,props:{className:[x,y]},children:[]}]},{type:a,value:q}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:n}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"JSON formatted configuration file that must contain, at very least, a key\nto match against RCPT address, and a value that is an associative array\nwith an \"action\" : \""},{type:b,tag:"action",props:{},children:[{type:a,value:"\" key, value pair.  An example:"}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"  { \"test1\" : { \"action\" : \"drop\" } } \n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"In the above example the \"test1\" alias will drop any message that matches\ntest1, or test1-* or test1+* (wildcard '-' or '+', see below).  Actions\nmay in turn have 0 or more options listed with them like so:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"  { \"test3\" : { \"action\" : \"alias\", \"to\" : \"test3-works\" } }\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"In the above example the \"test3\" alias has an action of \"alias\", and\na required \"to\" field.  If this \"to\" field were missing the alias would\nfail to run, and an error would be printed in the logs."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now aliases of 'user', '@host' and 'user@host' possible:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"  { \"demo\" : { \"action\" : \"drop\" } }\n  or\n  { \"@example.com\" : { \"action\" : \"drop\" } } \n  or\n  { \"demo@example.com\" : { \"action\" : \"drop\" } } \n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Aliases may also be exploded to multiple recipients:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"  { \"sales@example.com\": { \"action: \"alias\", \"to\": [\"alice@example.com\", \"bob@example.com\"] } }\n"}]}]}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"wildcard notation"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"In an effort to match some of the functionality of other alias parsers\nwe've allowed wildcard matching of the alias against the right most\nstring of a RCPT address.  The characters '-' and '+' are commonly used\nfor subaddressing and this plugin has built-in support to alias the\n\"user\" part of the email address."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"That is, if our address were "},{type:b,tag:l,props:{href:"mailto:test2-testing@example.com"},children:[{type:a,value:"test2-testing@example.com"}]},{type:a,value:" (or\n"},{type:b,tag:l,props:{href:"mailto:test2+testing@example.com"},children:[{type:a,value:"test2+testing@example.com"}]},{type:a,value:"), the below alias would match:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"  { \"test2\" : { \"action\" : \"drop\" } }\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The larger, and more specific alias, should always match first when\nusing wildcard '-' notation.  So if the above RCPT were put up against\nthis alias config, it would not drop, but rather map to another\naddress:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"  {\n      \"test2\" : { \"action\" : \"drop\" },\n      \"test2-testing\" : { \"action\" : \"alias\", \"to\" : \"test@foo.com\" }\n  }\n"}]}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"chaining and circuits"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"In short, we do not allow chaining of aliases at this time.  As a\nside-effect, we enjoy protections against alias circuits."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"optional one line formatting"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Any valid JSON will due, however, please consider keeping each alias\non its own line so that others that wish to grep the aliases file\nhave an easier time finding the full configuration for an alias."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"nondeterministic duplicate matches"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This plugin was written with speed in mind.  That means every lookup\nhashes into the alias file for its match.  While the act of doing so\nis fast, it does mean that any duplicate alias entries will match\nnondeterministically.  That is, we cannot predict what will happen\nhere:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"  {\n      \"coinflip\" : { \"action\" : \"alias\", \"to\" : \"heads@coin.com\" },\n      \"coinflip\" : { \"action\" : \"alias\", \"to\" : \"tails@coin.com\" }\n  }\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Truth be told, one result will likely always be chosen over the other,\nso this is not exactly a coinflip.  We simply cannot say what the\nlanguage implementation will do here, it could change tomorrow."}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"action (required)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The following is a list of supported actions, and the options they require."}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"drop"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This action simply drops a message, while pretending everything was\nokay to the sender.  This acts much like an alias to \u002Fdev\u002Fnull in\nother servers."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"alias"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This action will map the alias key to the address specified in the\n\"to\" option.  A note about matching in addition to the note\nabout wildcard '-' above.  When we match an alias, we store the\nhostname of the match for a shortcut substitution syntax later."}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"to (required)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This option is the full address, or local part at matched hostname\nthat the RCPT address will be re-written to.  For an example of\nan alias to a full address consider the following:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"  { \"test5\" : { \"action\" : \"alias\", \"to\" : \"test5@foo.com\" } }\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This will map RCPT matches for \"test5\" to \"test5-works@foo.com\".\nThis would map \"test5@somedomain.com\" to \"test5-works@foo.com\"\nevery time.  Now compare this notation with its shortcut\ncounterpart, best used when the \"to\" address is at the same\ndomain as the match:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"  { \"test4\" : { \"action\" : \"alias\", \"to\" : \"test4\" } }\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Clearly, this notation is more compact, but what does it do.  Well,\nmail to \"test4-foo@anydomain.com\" will map to \"test4@anydomain.com\".\nOne can see the clear benefit of using this notation with lots of\naliases on a single domain that map to other local parts at the\nsame domain."}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:t,props:{id:r},children:[{type:b,tag:l,props:{href:"#example-configuration",ariaHidden:u,tabIndex:v},children:[{type:b,tag:w,props:{className:[x,y]},children:[]}]},{type:a,value:s}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"{\n\"test1\" : { \"action\" : \"drop\" },\n\"test2\" : { \"action\" : \"drop\" },\n\"test3\" : { \"action\" : \"alias\", \"to\" : \"test3-works\" },\n\"test4\" : { \"action\" : \"alias\", \"to\" : \"test4\" },\n\"test5\" : { \"action\" : \"alias\", \"to\" : \"test5-works@success.com\" },\n\"test6\" : { \"action\" : \"alias\", \"to\" : \"test6-works@success.com\" }\n}"}]}]},dir:"\u002Fen\u002Fplugins",path:"\u002Fen\u002Fplugins\u002Faliases",extension:".md",createdAt:z,updatedAt:z,to:"\u002Fplugins\u002Faliases"},prev:{slug:"access",title:"access - ACLs",to:"\u002Fplugins\u002Faccess"},next:{slug:A,title:A,to:"\u002Fplugins\u002Fattachment"}}],fetch:[],mutations:[]}}("text","element","\n","p","code","li","div","nuxt-content-highlight","pre","language-text","line-numbers","a","ul","aliases","configuration",2,"Configuration","example-configuration","Example Configuration","h2","true",-1,"span","icon","icon-link","2020-12-21T00:45:07.188Z","attachment")));